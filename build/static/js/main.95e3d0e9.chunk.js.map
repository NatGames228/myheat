{"version":3,"sources":["utils/px2vw.js","styles/global.js","services/MyHeatService.js","pages/Home/HomeStyles.js","pages/Home/Home.js","App.js","index.js"],"names":["px2vw","size","width","Global","createGlobalStyle","MyHeatService","_apiBase","_apiKey","data","isNew","getResource","url","a","fetch","res","ok","Error","status","json","updateData","new","length","map","_transformData","forEach","item","buf","find","el","id","temperature","console","log","Date","sort","b","getAllData","getData","result","name","toFixed","Container","styled","div","Box","props","bgColor","BoxTitle","h3","BoxText","p","Home","state","myHeatService","onDataLoaded","setState","then","this","timerId","setInterval","clearInterval","box","key","Component","lorem","Math","random","title","text","App","boxData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95e3d0e9.chunk.js","sourcesContent":["const px2vw = (size, width = 1440) => `${(size / width) * 100}vw`;\r\n\r\nexport default px2vw;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport px2vw from \"../utils/px2vw\";\r\n\r\nexport const Global = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n  :root {\r\n      font-size: ${px2vw(24)};\r\n\r\n      @media (min-width: 768px) {\r\n        font-size: ${px2vw(18)};\r\n      }\r\n\r\n      @media (min-width: 1024px) {\r\n        font-size: ${px2vw(16)};\r\n      }\r\n    }\r\n`;\r\n\r\nexport default Global;\r\n","\r\nclass MyHeatService {\r\n  _apiBase = 'https://t3.myheat.net/api/objects/';\r\n  _apiKey = '';\r\n\r\n  data = [];\r\n  isNew = true;\r\n  \r\n  getResource = async (url) => {\r\n    let res = await fetch(url);\r\n    \r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n    }\r\n    \r\n    return await res.json();\r\n  }\r\n  \r\n  updateData = async () => {\r\n    const res = await this.getResource(`${this._apiBase}${this._apiKey}`);\r\n    if (res.new || !this.data.length) {\r\n      this.data = res.data.map(this._transformData);\r\n    } else {\r\n      this.data.forEach(item => {\r\n        let buf = res.data.find((el) => el.id === item.id);\r\n        if (buf) {\r\n          item.temperature = this._transformData(buf).temperature;\r\n        }\r\n      })\r\n    }\r\n    this.isNew = res.new;\r\n    console.log(new Date());\r\n    console.log(this.data, this.isNew);\r\n    console.log(res.data.sort((a, b) => {\r\n      if (a.id > b.id) return 1;\r\n      if (a.id === b.id) return 0;\r\n      if (a.id < b.id) return -1;\r\n    }), res.new);\r\n  }\r\n\r\n  getAllData = async () => {  \r\n    await this.updateData();\r\n    return { data: this.data, isNew: this.isNew };\r\n  }\r\n\r\n  getData = () => {\r\n    return this.data;\r\n  }\r\n\r\n  isNew = () =>  {\r\n    return this.isNew;\r\n  }\r\n\r\n  _transformData = (result) => {\r\n    return {\r\n      id: result.id,\r\n      name: result.name,\r\n      temperature: result.temperature.toFixed(1),\r\n    }\r\n  }\r\n}\r\n\r\nexport default MyHeatService;\r\n","import styled from \"styled-components\";\r\nimport px2vw from \"../../utils/px2vw\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  margin: ${px2vw(32)};\r\n  max-width: 100%;\r\n\r\n  @media (min-width: 1024px) {\r\n    flex-wrap: nowrap;\r\n  }\r\n`;\r\n\r\nexport const Box = styled.div`\r\n  display: flex;\r\n  width: ${px2vw(320, 320)};\r\n  min-height: ${px2vw(200, 320)};\r\n  flex-direction: column;\r\n  padding: ${px2vw(20)};\r\n  margin: ${px2vw(20)};\r\n  // background-color: ${props => props.bgColor};\r\n  background-color: #9FEACD;\r\n  height: 100%;\r\n\r\n  @media (min-width: 768px) {\r\n    width: ${px2vw(320, 768)};\r\n    min-height: ${px2vw(200, 768)};\r\n    height: 100%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: ${px2vw(500)};\r\n    min-height: ${px2vw(300)};\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const BoxTitle = styled.h3`\r\n  color: #333;\r\n  font-size: 2rem;\r\n  text-align: center;\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nexport const BoxText = styled.p`\r\n  margin-top: ${px2vw(20)};\r\n  color: #666;\r\n  font-size: 1.5rem;\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Component } from \"react/cjs/react.production.min\";\r\n\r\nimport MyHeatService from \"../../services/MyHeatService\";\r\n\r\nimport { Container, Box, BoxTitle, BoxText } from \"./HomeStyles\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    data: [],\r\n    isNew: false\r\n  }\r\n\r\n  myHeatService = new MyHeatService();\r\n\r\n  componentDidMount() {\r\n    this.updateData();\r\n    this.timerId = setInterval(this.updateData, 15 * 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerId);\r\n  }\r\n  \r\n  onDataLoaded = (data) => {\r\n    this.setState({\r\n      data: data.data,\r\n      isNew: data.isNew\r\n    })\r\n  }\r\n\r\n  updateData = () => {\r\n      this.myHeatService\r\n          .getAllData()    \r\n          .then(this.onDataLoaded)\r\n  }\r\n\r\n  render() {\r\n    const { data, isNew } = this.state;\r\n    return (\r\n      <Container>\r\n      {data.map(box => (\r\n        <Box key={box.id}>\r\n          <BoxTitle>{box.name}</BoxTitle>\r\n          <BoxText>id: {box.id}</BoxText>\r\n          <BoxText>temperature: {box.temperature} â„ƒ</BoxText>\r\n        </Box>\r\n      ))}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nimport Global from \"./styles/global\";\r\n\r\nimport Home from \"./pages/Home/Home\";\r\n\r\nconst lorem =\r\n  \"Lorem, ipsum dolor sit amet consectetur adipisicing elit. Laboriosam, sed iure blanditiis voluptatum nulla quidem minus quam tempora obcaecati necessitatibus inventore! Vitae totam quam pariatur facilis fugit maxime adipisci eaque.\";\r\n\r\nconst data = [\r\n  {\r\n    id: Math.random(),\r\n    title: \"Box titulo 1\",\r\n    text: lorem,\r\n    bgColor: \"#D5CAFA\"\r\n  },\r\n  {\r\n    id: Math.random(),\r\n    title: \"Box titulo 2\",\r\n    text: lorem,\r\n    bgColor: \"#EDA9A9\"\r\n  },\r\n  {\r\n    id: Math.random(),\r\n    title: \"Box titulo 3\",\r\n    text: lorem,\r\n    bgColor: \"#F2EE8D\"\r\n  },\r\n  {\r\n    id: Math.random(),\r\n    title: \"Box titulo 4\",\r\n    text: lorem,\r\n    bgColor: \"#9FEACD\"\r\n  }\r\n];\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Global />\r\n      <Home boxData={data} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}